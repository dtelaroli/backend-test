AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Backend Test Sam Pipeline

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Parameters:
  env:
    Description: "Environment variable"
    Type: String
    Default: dev
  nodeEnv:
    Description: "Node Environment variable"
    Type: String
    Default: development
  region:
    Description: Default Region
    Type: String
    Default: us-east-1
  branch:
    Type: String
    Default: develop
  repoOwner:
    Type: String
    Default: dtelaroli
  repoName:
    Type: String
    Default: backend-test
  githubToken:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: GitHub Token
    Default: /config/global/github-token

Resources:
  BuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeDhcpOptions"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:DescribeVpcs"
                Resource: "*"
              - Action:
                  - "ssm:GetParameters"
                Effect: Allow
                Resource: "*"
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource:
                  - !GetAtt ArtifactStoreBucket.Arn
                  - !Sub ${ArtifactStoreBucket.Arn}/*

  Build:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Join:
          - "-"
          - - !Sub AWS::StackName
            - !Ref env
            - pipepline
      Artifacts:
        Type: CODEPIPELINE
      Description: Build Sam Project
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: false
        EnvironmentVariables:
          - Type: PLAINTEXT
            Name: ENV
            Value: !Ref env
          - Type: PLAINTEXT
            Name: NODE_ENV
            Value: !Ref nodeEnv
          - Type: PLAINTEXT
            Name: REGION
            Value: !Ref AWS:Region
          - Type: PLAINTEXT
            Name: BUCKET
            Value: !Ref ArtifactStoreBucket
          - Type: PLAINTEXT
            Name: SAM_CLI_TELEMETRY
            Value: 0

      ServiceRole: !GetAtt BuildRole.Arn
      Source:
        Type: CODEPIPELINE
        GitCloneDepth: 1
      TimeoutInMinutes: 10

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "iam:PassRole"
                Effect: Allow
                Resource: "*"
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !GetAtt Build.Arn
              - Action:
                  - "s3:ListBucket"
                  - "s3:GetBucketVersioning"
                Effect: Allow
                Resource:
                  - !GetAtt ArtifactStoreBucket.Arn
                  - !Sub ${ArtifactStoreBucket.Arn}/*
              - Action:
                  - "s3:*"
                Effect: Allow
                Resource:
                  - !GetAtt ArtifactStoreBucket.Arn
                  - !Sub ${ArtifactStoreBucket.Arn}/*
              - Action:
                  - codestar-connections:UseConnection
                Effect: Allow
                Resource: !Ref codestarConnection
              - Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeChangeSet
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - ssm:GetParameters
                Effect: Allow
                Resource: "*"

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "*"
                Effect: Allow
                Resource: "*"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreBucket
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                OAuthToken: !Ref githubToken
                Owner: !Ref repoOwner
                Repo: !Ref repoName
                Branch: !Ref branch
                PollForSourceChanges: false
              RunOrder: "1"
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref Build
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: "1"
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Sub ${AWS::StackName}-${env}-sam-app
                ChangeSetName: !Sub ${AWS::StackName}-update
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: "BuildArtifact::packaged-template.yml"
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Sub ${AWS::StackName}-${env}-sam-app
                ChangeSetName: !Sub ${AWS::StackName}-update
                RoleArn: !GetAtt CloudFormationRole.Arn
              RunOrder: 2

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
